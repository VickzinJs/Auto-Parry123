local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==7) then function v41(v43,v44,v45)local v46=v43[1];local v47=v43[879 -(282 + 595) ];local v48=v43[3];return function(...)local v78=v46;local v79=v47;local v80=v48;local v81=v39;local v82=1;local v83= -1;local v84={};local v85={...};local v86=v20("#",...) -1 ;local v87={};local v88={};for v94=1637 -(1523 + 114) ,v86 do if (v94>=v80) then v84[v94-v80 ]=v85[v94 + 1 ];else v88[v94]=v85[v94 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do local v95=0;while true do if (v95==1) then if (v91<=63) then if (v91<=31) then if (v91<=15) then if (v91<=7) then if (v91<=(3 -0)) then if (v91<=1) then if (v91>0) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;else local v135=0;local v136;while true do if (0==v135) then v136=v90[2];do return v88[v136](v21(v88,v136 + 1 ,v90[3]));end break;end end end elseif (v91==2) then do return;end elseif ((v90[1068 -(68 + 997) ]==v7("\115\23\60\122","\157\44\82\114\44\47\59\74")) or (v90[3]==v7("\3\182\49\215\208\10\165","\181\100\211\69\177"))) then v88[v90[2]]=v45;else v88[v90[2]]=v45[v90[3]];end elseif (v91<=5) then if (v91>4) then local v137=0;local v138;local v139;while true do if (v137==0) then v138=v90[2];v139=v88[v138];v137=1;end if (v137==1) then for v445=v138 + 1 ,v90[3] do v15(v139,v88[v445]);end break;end end else for v335=v90[2],v90[3] do v88[v335]=nil;end end elseif (v91==(1276 -(226 + 1044))) then local v140=0;local v141;local v142;while true do if (v140==0) then v141=v90[2];v142=v88[v90[12 -9 ]];v140=1;end if (v140==1) then v88[v141 + 1 ]=v142;v88[v141]=v142[v90[121 -(32 + 85) ]];break;end end else v88[v90[2]]=v88[v90[3 + 0 ]]%v90[4] ;end elseif (v91<=11) then if (v91<=9) then if (v91>8) then local v144=0;local v145;while true do if (v144==0) then v145=v90[1 + 1 ];v88[v145](v88[v145 + (958 -(892 + 65)) ]);break;end end else local v146=v90[2];local v147=v88[v146 + 2 ];local v148=v88[v146] + v147 ;v88[v146]=v148;if (v147>0) then if (v148<=v88[v146 + 1 ]) then local v446=0;while true do if (0==v446) then v82=v90[3];v88[v146 + (7 -4) ]=v148;break;end end end elseif (v148>=v88[v146 + 1 ]) then local v447=0;while true do if (v447==0) then v82=v90[3];v88[v146 + 3 ]=v148;break;end end end end elseif (v91>10) then v88[v90[2]]=v41(v79[v90[3]],nil,v45);else v88[v90[3 -1 ]]=v88[v90[4 -1 ]][v88[v90[4]]];end elseif (v91<=13) then if (v91>(362 -(87 + 263))) then if (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[182 -(67 + 113) ]]=v88[v90[3]] * v88[v90[4]] ;end elseif (v91>14) then v88[v90[2 + 0 ]]=v88[v90[3]]%v88[v90[4]] ;else v88[v90[2]]=v88[v90[3]]^v90[4] ;end elseif (v91<=23) then if (v91<=19) then if (v91<=17) then if (v91==16) then v88[v90[2]][v88[v90[3]]]=v90[4];else v88[v90[2]][v90[3]]=v90[9 -5 ];end elseif (v91>18) then v88[v90[2]]=v88[v90[3]]/v88[v90[3 + 1 ]] ;else local v161=0;local v162;while true do if (v161==0) then v162=v90[2];do return v21(v88,v162,v83);end break;end end end elseif (v91<=21) then if (v91>20) then local v163=v90[2];do return v21(v88,v163,v163 + v90[3] );end else v88[v90[2]]=v90[3] * v88[v90[4]] ;end elseif (v91>22) then v88[v90[2]]=v88[v90[3]][v88[v90[4]]];else local v167=0;local v168;while true do if (v167==0) then v168=v90[2];v88[v168]=v88[v168](v21(v88,v168 + 1 ,v90[3]));break;end end end elseif (v91<=27) then if (v91<=25) then if (v91==24) then local v169=v90[2];v88[v169](v21(v88,v169 + (3 -2) ,v83));else v88[v90[2]]=v88[v90[3]] -v88[v90[4]] ;end elseif (v91>26) then v88[v90[2]]=v90[3] * v88[v90[4]] ;else for v337=v90[2],v90[3] do v88[v337]=nil;end end elseif (v91<=29) then if (v91==28) then v88[v90[2]]=v88[v90[3]] + v90[956 -(802 + 150) ] ;else local v173=v90[2];local v174,v175=v81(v88[v173](v21(v88,v173 + 1 ,v90[3])));v83=(v175 + v173) -1 ;local v176=0;for v339=v173,v83 do local v340=0;while true do if (v340==0) then v176=v176 + 1 ;v88[v339]=v174[v176];break;end end end end elseif (v91==30) then v88[v90[2]]=v41(v79[v90[3]],nil,v45);else local v178=v90[2];local v179=v90[4];local v180=v178 + 2 ;local v181={v88[v178](v88[v178 + 1 ],v88[v180])};for v341=1,v179 do v88[v180 + v341 ]=v181[v341];end local v182=v181[1];if v182 then local v385=0;while true do if (v385==0) then v88[v180]=v182;v82=v90[3];break;end end else v82=v82 + 1 ;end end elseif (v91<=47) then if (v91<=39) then if (v91<=35) then if (v91<=33) then if (v91==32) then if (v88[v90[2]]<=v88[v90[10 -6 ]]) then v82=v82 + 1 ;else v82=v90[3];end else local v183=v90[3 -1 ];v88[v183]=v88[v183]();end elseif (v91==34) then local v185=0;local v186;while true do if (0==v185) then v186=v90[2];v88[v186]=v88[v186](v21(v88,v186 + 1 ,v83));break;end end else local v187=0;local v188;local v189;while true do if (v187==1) then for v450=v188 + 1 ,v83 do v15(v189,v88[v450]);end break;end if (v187==0) then v188=v90[2];v189=v88[v188];v187=1;end end end elseif (v91<=(27 + 10)) then if (v91>36) then v45[v90[3]]=v88[v90[2]];else local v192=v79[v90[3]];local v193;local v194={};v193=v18({},{[v7("\54\244\190\84\13\206\175","\58\105\171\215")]=function(v344,v345)local v346=0;local v347;while true do if (v346==0) then v347=v194[v345];return v347[1][v347[2]];end end end,[v7("\202\214\143\71\246\112\251\237\132\90","\25\149\137\225\34\129")]=function(v348,v349,v350)local v351=0;local v352;while true do if (v351==0) then v352=v194[v349];v352[1][v352[2]]=v350;break;end end end});for v353=1,v90[4] do local v354=0;local v355;while true do if (1==v354) then if (v355[1]==90) then v194[v353-(998 -(915 + 82)) ]={v88,v355[3 -0 ]};else v194[v353-1 ]={v44,v355[3]};end v87[ #v87 + 1 ]=v194;break;end if (v354==0) then v82=v82 + 1 ;v355=v78[v82];v354=1;end end end v88[v90[2]]=v41(v192,v193,v45);end elseif (v91>(1225 -(1069 + 118))) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end else local v196=v90[2];v88[v196](v21(v88,v196 + 1 ,v83));end elseif (v91<=(96 -53)) then if (v91<=41) then if (v91>40) then local v197=v90[2];local v198,v199=v81(v88[v197](v88[v197 + (1 -0) ]));v83=(v199 + v197) -1 ;local v200=0;for v356=v197,v83 do local v357=0;while true do if (v357==0) then v200=v200 + 1 ;v88[v356]=v198[v200];break;end end end else v88[v90[2]]=v88[v90[3]] -v88[v90[4]] ;end elseif (v91==42) then v82=v90[3];else local v203=v90[2];v88[v203]=v88[v203](v88[v203 + 1 ]);end elseif (v91<=45) then if (v91>44) then local v205=v90[2];local v206=v88[v205];local v207=v88[v205 + 2 ];if (v207>0) then if (v206>v88[v205 + 1 ]) then v82=v90[3];else v88[v205 + 3 ]=v206;end elseif (v206<v88[v205 + 1 ]) then v82=v90[3];else v88[v205 + 3 ]=v206;end elseif (v88[v90[2]]==v88[v90[4]]) then v82=v82 + 1 + 0 ;else v82=v90[3];end elseif (v91>46) then local v208=v90[2];local v209={v88[v208](v21(v88,v208 + 1 ,v83))};local v210=0;for v358=v208,v90[4] do local v359=0;while true do if (v359==0) then v210=v210 + (1 -0) ;v88[v358]=v209[v210];break;end end end else v88[v90[2]]=v90[3 + 0 ]~=0 ;end elseif (v91<=55) then if (v91<=51) then if (v91<=49) then if (v91==(839 -(368 + 423))) then local v212=0;local v213;while true do if (v212==0) then v213=v90[2];v88[v213]=v88[v213](v21(v88,v213 + 1 ,v83));break;end end elseif v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>50) then do return;end else do return v88[v90[2]]();end end elseif (v91<=53) then if (v91>52) then local v214=v90[6 -4 ];local v215={v88[v214](v21(v88,v214 + 1 ,v83))};local v216=0;for v360=v214,v90[4] do local v361=0;while true do if (v361==0) then v216=v216 + 1 ;v88[v360]=v215[v216];break;end end end else v88[v90[2]]={};end elseif (v91==54) then if (v88[v90[20 -(10 + 8) ]]<v90[4]) then v82=v82 + 1 ;else v82=v90[3];end else v44[v90[11 -8 ]]=v88[v90[2]];end elseif (v91<=59) then if (v91<=57) then if (v91>56) then v88[v90[2]]();else local v220=0;local v221;while true do if (v220==0) then v221=v90[444 -(416 + 26) ];v88[v221]=v88[v221](v88[v221 + 1 ]);break;end end end elseif (v91==58) then if ((v90[3]==v7("\197\202\30\202","\82\154\143\80\156\180\233")) or (v90[3]==v7("\52\14\92\72\56\11\215","\210\83\107\40\46\93\101\161"))) then v88[v90[2]]=v45;else v88[v90[2]]=v45[v90[3]];end else v88[v90[2]]=v90[3] + v88[v90[4]] ;end elseif (v91<=61) then if (v91==60) then do return v88[v90[2]]();end else local v223=v90[2];local v224={v88[v223]()};local v225=v90[12 -8 ];local v226=0;for v362=v223,v225 do v226=v226 + 1 + 0 ;v88[v362]=v224[v226];end end elseif (v91>62) then v88[v90[3 -1 ]]=v88[v90[3]] + v88[v90[442 -(145 + 293) ]] ;else local v228=0;local v229;while true do if (v228==0) then v229=v90[2];do return v88[v229],v88[v229 + 1 ];end break;end end end elseif (v91<=(525 -(44 + 386))) then if (v91<=79) then if (v91<=71) then if (v91<=(1553 -(998 + 488))) then if (v91<=65) then if (v91>(21 + 43)) then v88[v90[2]]=v88[v90[3]] + v90[4] ;else local v231=v90[2];v88[v231](v88[v231 + 1 ]);end elseif (v91==66) then v88[v90[2]]={};else v88[v90[2]]=v90[3 + 0 ];end elseif (v91<=69) then if (v91>68) then v45[v90[3]]=v88[v90[774 -(201 + 571) ]];else v88[v90[1140 -(116 + 1022) ]]=v90[3];end elseif (v91==(291 -221)) then if (v88[v90[2]]<=v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[2 + 1 ];end else v88[v90[2]]= not v88[v90[3]];end elseif (v91<=75) then if (v91<=73) then if (v91>72) then if (v88[v90[2]]~=v90[14 -10 ]) then v82=v82 + 1 ;else v82=v90[3];end else local v240=v90[7 -5 ];local v241=v88[v240];for v365=v240 + 1 ,v83 do v15(v241,v88[v365]);end end elseif (v91==74) then local v242=v90[2];local v243,v244=v81(v88[v242](v21(v88,v242 + 1 ,v90[3])));v83=(v244 + v242) -(860 -(814 + 45)) ;local v245=0;for v366=v242,v83 do local v367=0;while true do if (0==v367) then v245=v245 + 1 ;v88[v366]=v243[v245];break;end end end else v44[v90[3]]=v88[v90[2]];end elseif (v91<=77) then if (v91>(187 -111)) then local v248=0;local v249;while true do if (v248==0) then v249=v90[2];v88[v249](v21(v88,v249 + 1 + 0 ,v90[3]));break;end end else v88[v90[1 + 1 ]]=v88[v90[3]][v90[4]];end elseif (v91>78) then v88[v90[2]]= not v88[v90[3]];else v88[v90[2]][v88[v90[3]]]=v88[v90[4]];end elseif (v91<=87) then if (v91<=83) then if (v91<=81) then if (v91==80) then v88[v90[2]]=v44[v90[888 -(261 + 624) ]];else v88[v90[3 -1 ]]= #v88[v90[1083 -(1020 + 60) ]];end elseif (v91==82) then local v258=v90[1425 -(630 + 793) ];v88[v258]=v88[v258](v21(v88,v258 + 1 ,v90[3]));else v88[v90[2]][v90[3]]=v88[v90[13 -9 ]];end elseif (v91<=85) then if (v91>84) then v88[v90[2]]=v90[3] + v88[v90[4]] ;else local v263=0;local v264;while true do if (v263==0) then v264=v90[2];do return v88[v264],v88[v264 + 1 ];end break;end end end elseif (v91>86) then local v265=0;local v266;local v267;local v268;local v269;while true do if (v265==2) then for v468=v266,v83 do local v469=0;while true do if (v469==0) then v269=v269 + 1 + 0 ;v88[v468]=v267[v269];break;end end end break;end if (v265==0) then v266=v90[2];v267,v268=v81(v88[v266](v21(v88,v266 + 1 ,v83)));v265=1;end if (v265==1) then v83=(v268 + v266) -1 ;v269=0 -0 ;v265=2;end end else local v270=0;local v271;local v272;while true do if (v270==0) then v271=v90[6 -4 ];v272=v88[v90[1750 -(760 + 987) ]];v270=1;end if (v270==1) then v88[v271 + 1 ]=v272;v88[v271]=v272[v90[4]];break;end end end elseif (v91<=91) then if (v91<=89) then if (v91==88) then v88[v90[2]]=v88[v90[3]][v90[4]];else local v275=0;local v276;local v277;local v278;while true do if (v275==1) then v278={};v277=v18({},{[v7("\233\191\39\60\210\133\54","\82\182\224\78")]=function(v470,v471)local v472=v278[v471];return v472[1][v472[2]];end,[v7("\102\193\213\231\149\4\87\250\222\250","\109\57\158\187\130\226")]=function(v473,v474,v475)local v476=v278[v474];v476[1][v476[2]]=v475;end});v275=2;end if (0==v275) then v276=v79[v90[3]];v277=nil;v275=1;end if (v275==2) then for v478=1,v90[4] do local v479=0;local v480;while true do if (v479==0) then v82=v82 + 1 ;v480=v78[v82];v479=1;end if (v479==1) then if (v480[1]==(2003 -(1789 + 124))) then v278[v478-1 ]={v88,v480[3]};else v278[v478-1 ]={v44,v480[3]};end v87[ #v87 + (767 -(745 + 21)) ]=v278;break;end end end v88[v90[2]]=v41(v276,v277,v45);break;end end end elseif (v91==90) then v88[v90[2]]=v88[v90[3]];else local v281=v90[2];local v282,v283=v81(v88[v281](v88[v281 + 1 ]));v83=(v283 + v281) -1 ;local v284=0;for v368=v281,v83 do v284=v284 + 1 ;v88[v368]=v282[v284];end end elseif (v91<=93) then if (v91==92) then if (v88[v90[2]]~=v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end else local v285=v90[2];local v286=v88[v285];local v287=v90[3];for v371=1,v287 do v286[v371]=v88[v285 + v371 ];end end elseif (v91==94) then if (v88[v90[2]]<v90[4]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v88[v90[2]]~=v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[2 + 1 ];end elseif (v91<=(305 -194)) then if (v91<=103) then if (v91<=99) then if (v91<=97) then if (v91==(376 -280)) then v88[v90[2]][v88[v90[3]]]=v90[4];else local v290=0;local v291;while true do if (v290==0) then v291=v90[2];do return v88[v291](v21(v88,v291 + 1 + 0 ,v90[3 + 0 ]));end break;end end end elseif (v91==98) then local v292=v90[1057 -(87 + 968) ];local v293=v88[v292];local v294=v88[v292 + 2 ];if (v294>0) then if (v293>v88[v292 + 1 ]) then v82=v90[3];else v88[v292 + 3 ]=v293;end elseif (v293<v88[v292 + (4 -3) ]) then v82=v90[3];else v88[v292 + 3 ]=v293;end elseif (v88[v90[2]]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=101) then if (v91>100) then local v295=0;local v296;local v297;local v298;while true do if (v295==0) then v296=v90[2];v297=v88[v296];v295=1;end if (v295==1) then v298=v90[3];for v485=1 + 0 ,v298 do v297[v485]=v88[v296 + v485 ];end break;end end elseif (v88[v90[2]]~=v90[4]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>102) then v88[v90[2]]=v88[v90[3]];elseif  not v88[v90[2]] then v82=v82 + (2 -1) ;else v82=v90[3];end elseif (v91<=107) then if (v91<=105) then if (v91>104) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else local v301=v90[2];local v302=v90[4];local v303=v301 + 2 ;local v304={v88[v301](v88[v301 + 1 ],v88[v303])};for v374=1,v302 do v88[v303 + v374 ]=v304[v374];end local v305=v304[1];if v305 then local v403=0;while true do if (v403==0) then v88[v303]=v305;v82=v90[3];break;end end else v82=v82 + 1 ;end end elseif (v91>106) then v88[v90[2]]=v88[v90[3]] + v88[v90[10 -6 ]] ;else local v307=v90[2];v88[v307](v21(v88,v307 + 1 ,v90[3]));end elseif (v91<=109) then if (v91>(1925 -(1703 + 114))) then v88[v90[2]]();else v88[v90[2]][v90[3]]=v88[v90[4]];end elseif (v91==110) then v88[v90[2]]=v90[3]~=0 ;else local v311=v90[2];v88[v311]=v88[v311]();end elseif (v91<=119) then if (v91<=115) then if (v91<=113) then if (v91>112) then if (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v44[v90[3]];end elseif (v91>114) then do return v88[v90[2]];end else v88[v90[2]][v88[v90[3]]]=v88[v90[4]];end elseif (v91<=117) then if (v91>116) then do return v88[v90[2]];end else local v317=v90[2];local v318=v88[v317 + 2 ];local v319=v88[v317] + v318 ;v88[v317]=v319;if (v318>0) then if (v319<=v88[v317 + 1 ]) then local v488=0;while true do if (v488==0) then v82=v90[3];v88[v317 + 3 ]=v319;break;end end end elseif (v319>=v88[v317 + 1 ]) then local v489=0;while true do if (v489==0) then v82=v90[3];v88[v317 + 3 ]=v319;break;end end end end elseif (v91>118) then if  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else local v321=v90[2];local v322={v88[v321]()};local v323=v90[4];local v324=0;for v377=v321,v323 do local v378=0;while true do if (v378==0) then v324=v324 + 1 ;v88[v377]=v322[v324];break;end end end end elseif (v91<=123) then if (v91<=121) then if (v91>120) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v88[v90[3]]/v88[v90[4]] ;end elseif (v91>(823 -(376 + 325))) then local v326=v90[2];local v327,v328=v81(v88[v326](v21(v88,v326 + 1 ,v83)));v83=(v328 + v326) -1 ;local v329=0;for v379=v326,v83 do local v380=0;while true do if (v380==0) then v329=v329 + 1 ;v88[v379]=v327[v329];break;end end end else v88[v90[2 -0 ]]=v88[v90[3]]^v90[4] ;end elseif (v91<=125) then if (v91>124) then v88[v90[2]]=v88[v90[8 -5 ]] * v88[v90[4]] ;else v82=v90[3];end elseif (v91<=126) then v88[v90[2]][v90[3]]=v90[4];elseif (v91>127) then v88[v90[1 + 1 ]]= #v88[v90[6 -3 ]];else local v408=0;local v409;while true do if (v408==0) then v409=v90[2];do return v21(v88,v409,v83);end break;end end end v82=v82 + 1 ;break;end if (v95==0) then v90=v78[v82];v91=v90[1 + 0 ];v95=1;end end end end;end return v41(v40(),{},v28)(...);end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==4) then function v36()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;while true do if (v49==2) then v54=v32(v51,21,31);v55=((v32(v51,32)==1) and  -1) or 1 ;v49=3;end if (v49==3) then if (v54==0) then if (v53==0) then return v55 * (0 -0) ;else v54=1;v52=0;end elseif (v54==2047) then return ((v53==0) and (v55 * (1/0))) or (v55 * NaN) ;end return v16(v55,v54-1023 ) * (v52 + (v53/(2^52))) ;end if (v49==1) then v52=1;v53=(v32(v51,1,20) * (2^32)) + v50 ;v49=2;end if (0==v49) then v50=v35();v51=v35();v49=1;end end end v37=nil;function v37(v56)local v57;if  not v56 then v56=v35();if (v56==0) then return "";end end v57=v11(v27,v30,(v30 + v56) -1 );v30=v30 + v56 ;local v58={};for v92=1, #v57 do v58[v92]=v10(v9(v11(v57,v92,v92)));end return v14(v58);end v29=5;end if (v29==2) then function v33()local v59=0;local v60;while true do if (v59==0) then v60=v9(v27,v30,v30);v30=v30 + 1 ;v59=1;end if (1==v59) then return v60;end end end v34=nil;function v34()local v61,v62=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v62 * 256) + v61 ;end v29=3;end if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\112\113","\145\94\95\153"),function(v63)if (v9(v63,5 -3 )==79) then local v96=0;while true do if (v96==0) then v31=v8(v11(v63,1,1));return "";end end else local v97=v10(v8(v63,16));if v31 then local v105=0;local v106;while true do if (v105==1) then return v106;end if (0==v105) then v106=v13(v97,v31);v31=nil;v105=1;end end else return v97;end end end);v29=1;end if (v29==6) then v40=nil;function v40()local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (1==v64) then v68={v65,v66,nil,v67};v69=v35();v70={};v64=2;end if (v64==0) then v65={};v66={};v67={};v64=1;end if (v64==2) then for v107=1,v69 do local v108=v33();local v109;if (v108==1) then v109=v33()~=0 ;elseif (v108==2) then v109=v36();elseif (v108==3) then v109=v37();end v70[v107]=v109;end v68[3]=v33();for v111=2 -1 ,v35() do local v112=v33();if (v32(v112,1,1)==0) then local v117=v32(v112,2,622 -(555 + 64) );local v118=v32(v112,935 -(857 + 74) ,6);local v119={v34(),v34(),nil,nil};if (v117==0) then v119[3]=v34();v119[572 -(367 + 201) ]=v34();elseif (v117==1) then v119[3]=v35();elseif (v117==2) then v119[3]=v35() -((929 -(214 + 713))^16) ;elseif (v117==3) then local v131=0;while true do if (v131==0) then v119[3]=v35() -(2^16) ;v119[4]=v34();break;end end end if (v32(v118,1,1)==1) then v119[2]=v70[v119[2]];end if (v32(v118,2,2)==1) then v119[3]=v70[v119[3]];end if (v32(v118,3,1 + 2 )==(1 + 0)) then v119[4]=v70[v119[4]];end v65[v111]=v119;end end v64=3;end if (v64==3) then for v113=1,v35() do v66[v113-1 ]=v40();end return v68;end end end v41=nil;v29=7;end if (v29==1) then v32=nil;function v32(v71,v72,v73)if v73 then local v98=(v71/(2^(v72-1)))%(2^(((v73-1) -(v72-1)) + 1)) ;return v98-(v98%1) ;else local v99=2^(v72-1) ;return (((v71%(v99 + v99))>=v99) and 1) or 0 ;end end v33=nil;v29=2;end if (v29==3) then v35=nil;function v35()local v74,v75,v76,v77=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v77 * 16777216) + (v76 * 65536) + (v75 * 256) + v74 ;end v36=nil;v29=4;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.16) ~  Much Love, Ferib 

]]--
